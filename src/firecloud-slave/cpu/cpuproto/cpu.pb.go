// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cpu.proto

package cpuproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Processor struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorId             string   `protobuf:"bytes,2,opt,name=vendorId,proto3" json:"vendorId,omitempty"`
	Model                int64    `protobuf:"varint,3,opt,name=model,proto3" json:"model,omitempty"`
	ModelName            string   `protobuf:"bytes,4,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Flags                []string `protobuf:"bytes,5,rep,name=flags,proto3" json:"flags,omitempty"`
	Cores                int64    `protobuf:"varint,6,opt,name=cores,proto3" json:"cores,omitempty"`
	MHz                  float64  `protobuf:"fixed64,7,opt,name=mHz,proto3" json:"mHz,omitempty"`
	CacheSize            int64    `protobuf:"varint,8,opt,name=cacheSize,proto3" json:"cacheSize,omitempty"`
	PhysicalId           int64    `protobuf:"varint,9,opt,name=PhysicalId,proto3" json:"PhysicalId,omitempty"`
	CoreId               int64    `protobuf:"varint,10,opt,name=CoreId,proto3" json:"CoreId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Processor) Reset()         { *m = Processor{} }
func (m *Processor) String() string { return proto.CompactTextString(m) }
func (*Processor) ProtoMessage()    {}
func (*Processor) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc9a87e8768c24, []int{0}
}

func (m *Processor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Processor.Unmarshal(m, b)
}
func (m *Processor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Processor.Marshal(b, m, deterministic)
}
func (m *Processor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Processor.Merge(m, src)
}
func (m *Processor) XXX_Size() int {
	return xxx_messageInfo_Processor.Size(m)
}
func (m *Processor) XXX_DiscardUnknown() {
	xxx_messageInfo_Processor.DiscardUnknown(m)
}

var xxx_messageInfo_Processor proto.InternalMessageInfo

func (m *Processor) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Processor) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *Processor) GetModel() int64 {
	if m != nil {
		return m.Model
	}
	return 0
}

func (m *Processor) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *Processor) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Processor) GetCores() int64 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *Processor) GetMHz() float64 {
	if m != nil {
		return m.MHz
	}
	return 0
}

func (m *Processor) GetCacheSize() int64 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *Processor) GetPhysicalId() int64 {
	if m != nil {
		return m.PhysicalId
	}
	return 0
}

func (m *Processor) GetCoreId() int64 {
	if m != nil {
		return m.CoreId
	}
	return 0
}

// SaveRequest
type SaveRequest struct {
	Pro                  []*Processor `protobuf:"bytes,1,rep,name=pro,proto3" json:"pro,omitempty"`
	Ip                   string       `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc9a87e8768c24, []int{1}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetPro() []*Processor {
	if m != nil {
		return m.Pro
	}
	return nil
}

func (m *SaveRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// SaveReply
type SaveReply struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveReply) Reset()         { *m = SaveReply{} }
func (m *SaveReply) String() string { return proto.CompactTextString(m) }
func (*SaveReply) ProtoMessage()    {}
func (*SaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc9a87e8768c24, []int{2}
}

func (m *SaveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveReply.Unmarshal(m, b)
}
func (m *SaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveReply.Marshal(b, m, deterministic)
}
func (m *SaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveReply.Merge(m, src)
}
func (m *SaveReply) XXX_Size() int {
	return xxx_messageInfo_SaveReply.Size(m)
}
func (m *SaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_SaveReply proto.InternalMessageInfo

func (m *SaveReply) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*Processor)(nil), "cpuproto.processor")
	proto.RegisterType((*SaveRequest)(nil), "cpuproto.SaveRequest")
	proto.RegisterType((*SaveReply)(nil), "cpuproto.SaveReply")
}

func init() { proto.RegisterFile("cpu.proto", fileDescriptor_08fc9a87e8768c24) }

var fileDescriptor_08fc9a87e8768c24 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0xbf, 0xcc, 0xf4, 0x5f, 0x6e, 0xf9, 0x44, 0x6e, 0x55, 0x42, 0x11, 0x1d, 0x06, 0x84,
	0x59, 0x75, 0x51, 0xdd, 0xbb, 0xa8, 0x0b, 0x67, 0x23, 0x92, 0x3e, 0xc1, 0x98, 0xa4, 0x76, 0x60,
	0xda, 0xc4, 0x4c, 0xa7, 0xd0, 0xbe, 0xbc, 0x92, 0x3b, 0xb5, 0x2d, 0xee, 0xce, 0xf9, 0xdd, 0x93,
	0x43, 0x38, 0xc0, 0x95, 0x6b, 0x26, 0xce, 0xdb, 0x8d, 0xc5, 0x81, 0x72, 0x0d, 0xa9, 0xf4, 0x9b,
	0x01, 0x77, 0xde, 0x2a, 0x53, 0xd7, 0xd6, 0xe3, 0x05, 0x44, 0xa5, 0x16, 0x2c, 0x61, 0x59, 0x2c,
	0xa3, 0x52, 0xe3, 0x18, 0x06, 0x5b, 0xb3, 0xd6, 0xd6, 0xe7, 0x5a, 0x44, 0x09, 0xcb, 0xb8, 0x3c,
	0x7a, 0xbc, 0x82, 0xee, 0xca, 0x6a, 0x53, 0x89, 0x98, 0xe2, 0xad, 0xc1, 0x5b, 0xe0, 0x24, 0xde,
	0x8a, 0x95, 0x11, 0x1d, 0x7a, 0x72, 0x02, 0xe1, 0xcd, 0xa2, 0x2a, 0x3e, 0x6b, 0xd1, 0x4d, 0xe2,
	0x8c, 0xcb, 0xd6, 0x04, 0xaa, 0xac, 0x37, 0xb5, 0xe8, 0xb5, 0x4d, 0x64, 0xf0, 0x12, 0xe2, 0xd5,
	0xeb, 0x5e, 0xf4, 0x13, 0x96, 0x31, 0x19, 0x64, 0xe8, 0x56, 0x85, 0x5a, 0x9a, 0x79, 0xb9, 0x37,
	0x62, 0x40, 0xd9, 0x13, 0xc0, 0x3b, 0x80, 0xf7, 0xe5, 0xae, 0x2e, 0x55, 0x51, 0xe5, 0x5a, 0x70,
	0x3a, 0x9f, 0x11, 0xbc, 0x81, 0xde, 0xcc, 0x7a, 0x93, 0x6b, 0x01, 0x74, 0x3b, 0xb8, 0xf4, 0x05,
	0x86, 0xf3, 0x62, 0x6b, 0xa4, 0xf9, 0x6a, 0x4c, 0xbd, 0xc1, 0x07, 0x88, 0x9d, 0xb7, 0x82, 0x25,
	0x71, 0x36, 0x9c, 0x8e, 0x26, 0xbf, 0x43, 0x4d, 0x8e, 0x23, 0xc9, 0x70, 0xa7, 0xa5, 0xdc, 0x61,
	0x93, 0xa8, 0x74, 0xe9, 0x3d, 0xf0, 0xb6, 0xc5, 0x55, 0x3b, 0x44, 0xe8, 0x28, 0xab, 0x0d, 0x0d,
	0xf9, 0x5f, 0x92, 0x9e, 0x3e, 0x43, 0x7f, 0xe6, 0x9a, 0x7c, 0xbd, 0xb0, 0xf8, 0x04, 0x9d, 0x90,
	0xc5, 0xeb, 0x53, 0xfb, 0xd9, 0x0f, 0xc6, 0xa3, 0xbf, 0xd8, 0x55, 0xbb, 0xf4, 0xdf, 0x47, 0x8f,
	0xd0, 0xe3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x13, 0xcc, 0xb6, 0xa1, 0xc7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CpuInfoClient is the client API for CpuInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CpuInfoClient interface {
	// Save
	Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveReply, error)
}

type cpuInfoClient struct {
	cc *grpc.ClientConn
}

func NewCpuInfoClient(cc *grpc.ClientConn) CpuInfoClient {
	return &cpuInfoClient{cc}
}

func (c *cpuInfoClient) Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveReply, error) {
	out := new(SaveReply)
	err := c.cc.Invoke(ctx, "/cpuproto.CpuInfo/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CpuInfoServer is the server API for CpuInfo service.
type CpuInfoServer interface {
	// Save
	Save(context.Context, *SaveRequest) (*SaveReply, error)
}

func RegisterCpuInfoServer(s *grpc.Server, srv CpuInfoServer) {
	s.RegisterService(&_CpuInfo_serviceDesc, srv)
}

func _CpuInfo_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CpuInfoServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cpuproto.CpuInfo/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CpuInfoServer).Save(ctx, req.(*SaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CpuInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cpuproto.CpuInfo",
	HandlerType: (*CpuInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _CpuInfo_Save_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cpu.proto",
}
